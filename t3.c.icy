  Procedure: main
  Intermediate Code Statements
	iLoad:    	v0 <- 5
	store:    	i1_ <- v0
	iLoad:    	v0 <- 3
	store:    	i2_ <- v0
	iLoad:    	v0 <- 1
	store:    	i3_ <- v0
	iLoad.d:    	f2 <- 0.50
	store.d:    	f1_ <- f2
	iLoad:    	v0 <- 10
	store:    	val_ <- v0
	load:    	v0 <- i1_
	iLoad:    	t0 <- 5
	seq:    	t1 <- v0 , t0
	load:    	v0 <- i2_
	iLoad:    	t0 <- 3
	seq:    	t2 <- v0 , t0
	load:    	v0 <- i3_
	iLoad:    	t0 <- 0
	seq:    	t3 <- v0 , t0
	or:    	v0 <- t2 , t3
	and:    	t0 <- t1 , v0
	beq:    	t0 , zero : goto label0
	iLoad:    	v0 <- 20
	store:    	val_ <- v0
	jump label1

label0:    	
	load:    	v0 <- i3_
	iLoad:    	t1 <- 1
	seq:    	t2 <- v0 , t1
	beq:    	t2 , zero : goto label2
	iLoad:    	v0 <- 30
	store:    	val_ <- v0

label2:    	

label1:    	
	iLoad:    	v0 <- 1
	load:    	a0 <- val_
	print
	load.d:    	f2 <- f1_
	iLoad.d:    	f4 <- 0.40
	sle.d:    	f2 <- f4
	bc1t label3
	iLoad:    	t0 <- 40
	store:    	val_ <- t0
	jump label4

label3:    	
	load.d:    	f2 <- f1_
	iLoad.d:    	f4 <- 0.50
	sne.d:    	f2 <- f4
	bc1t label5
	iLoad:    	t1 <- 50
	store:    	val_ <- t1
	jump label6

label5:    	
	iLoad:    	t1 <- 60
	store:    	val_ <- t1

label6:    	

label4:    	
	iLoad:    	v0 <- 1
	load:    	a0 <- val_
	print
